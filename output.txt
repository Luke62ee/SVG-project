Mon Jan 15 18:33:30 PST 2024
Linux csslab15 4.18.0-513.9.1.el8_9.x86_64 #1 SMP Wed Nov 29 18:55:19 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
uid=1282044(hku0621) gid=2121282044(hku0621) groups=2121282044(hku0621),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: circle
Reading: rect
Reading: ellipse
=====================================================
3. clang-tidy warnings are fixed
=====================================================
13472 warnings generated.
26945 warnings generated.
40453 warnings generated.
53926 warnings generated.
/home/NETID/hku0621/343-svg-Luke62ee/ellipse.cpp:21:33: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
istream &Ellipse::read(istream &in) {
                                ^
/home/NETID/hku0621/343-svg-Luke62ee/rect.cpp:21:30: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
istream &Rect::read(istream &in) {
                             ^
Suppressed 53924 warnings (53924 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
2 warnings treated as errors
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./circle.cpp
Running clang-format on ./ellipse.cpp
Running clang-format on ./main.cpp
Running clang-format on ./rect.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==1407561== Memcheck, a memory error detector
==1407561== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1407561== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==1407561== Command: ./a.out input1.txt svg1.svg
==1407561== Parent PID: 1407500
==1407561== 
==1407561== 
==1407561== HEAP SUMMARY:
==1407561==     in use at exit: 0 bytes in 0 blocks
==1407561==   total heap usage: 22 allocs, 22 frees, 95,024 bytes allocated
==1407561== 
==1407561== All heap blocks were freed -- no leaks are possible
==1407561== 
==1407561== For lists of detected and suppressed errors, rerun with: -s
==1407561== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Mon Jan 15 18:33:41 PST 2024
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
